# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    SUPPORTED_CI_CHECKS: 'Travis CI - Pull Request,ci/circleci: back_behat_legacy'
    GITHUB_URI: 'https://api.github.com'
    SLACK_CLIENT_ID: 'slack_client_id'
    SLACK_CLIENT_SECRET: 'slack_client_secret'
    locale: 'en'
    slub.infrastructure.persistence.file_database: '%kernel.project_dir%/var/persistence/%kernel.environment%/pr_repository.json'
    slub.infrastructure.chat.slack.base_uri: 'https://slack.com'
    GITHUB_APP_HOMEPAGE_URL: 'https://github.com/apps/slub-yeee-test'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: false      # Automatically injects dependencies in your services.
        autoconfigure: false # Automatically registers your services as commands, event subscribers, etc.
        public: true

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    #Slub\:
    #    resource: '../src/Slub/*'
    #    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # Handlers
    slub.application.put_pr_to_review.put_pr_to_review_handler:
        class: Slub\Application\PutPRToReview\PutPRToReviewHandler
        arguments:
            - '@slub.infrastructure.persistence.pr_repository'
            - '@slub.application.change_pr_size.is_large'
            - '@logger'

    slub.application.new_review.new_review_handler:
        class: Slub\Application\NewReview\NewReviewHandler
        arguments:
            - '@slub.infrastructure.persistence.pr_repository'
            - '@logger'

    slub.application.ci_status_update.ci_status_update_handler:
        class: Slub\Application\CIStatusUpdate\CIStatusUpdateHandler
        arguments:
            - '@slub.infrastructure.persistence.pr_repository'
            - '@logger'

    slub.application.close_pr.close_pr_handler:
        class: Slub\Application\ClosePR\ClosePRHandler
        arguments:
            - '@slub.infrastructure.persistence.pr_repository'
            - '@logger'

    slub.application.unpublish_pr.unpublish_pr_handler:
        class: Slub\Application\UnpublishPR\UnpublishPRHandler
        arguments:
            - '@slub.infrastructure.persistence.pr_repository'
            - '@logger'

    slub.application.notify.notify_author:
        class: Slub\Application\Notify\NotifyAuthor
        arguments:
            - '@slub.infrastructure.persistence.get_message_ids_for_pr'
            - '@slub.infrastructure.chat.slack.slack_client'
            - '@logger'
            - '%env(PR_SIZE_LIMIT)%'
        tags:
            - { name: kernel.event_subscriber }

    slub.application.notify.notify_squad:
        class: Slub\Application\Notify\NotifySquad
        arguments:
            - '@slub.infrastructure.persistence.pr_repository'
            - '@slub.infrastructure.chat.slack.slack_client'
            - '@logger'
        tags:
            - { name: kernel.event_subscriber }

    slub.application.publish_reminders.publish_reminders_handler:
        class: Slub\Application\PublishReminders\PublishRemindersHandler
        arguments:
            - '@slub.infrastructure.persistence.pr_repository'
            - '@slub.infrastructure.chat.slack.slack_client'
            - '@logger'
            - '@slub.infrastructure.common.query.clock'

    slub.application.change_pr_size.change_pr_size_handler:
        class: Slub\Application\ChangePRSize\ChangePRSizeHandler
        arguments:
        - '@slub.infrastructure.persistence.pr_repository'
        - '@slub.application.change_pr_size.is_large'
        - '@logger'

    slub.application.change_pr_size.is_large:
        class: Slub\Application\ChangePRSize\IsLarge
        arguments:
            - '%env(PR_SIZE_LIMIT)%'

    # Infrastructure
    ## Common
    slub.infrastructure.common.query.clock:
        class: Slub\Infrastructure\Common\Clock

    ## Persistence
    slub.infrastructure.persistence.sql.database_connection:
        class: Doctrine\DBAL\Connection
        factory: 'Slub\Infrastructure\Persistence\Sql\ConnectionFactory::create'
        arguments:
            - '%env(DATABASE_URL)%'

    slub.infrastructure.persistence.pr_repository:
        class: Slub\Infrastructure\Persistence\Sql\Repository\SqlPRRepository
        arguments:
            - '@slub.infrastructure.persistence.sql.database_connection'
            - '@event_dispatcher'

    slub.infrastructure.persistence.get_message_ids_for_pr:
        class: Slub\Infrastructure\Persistence\Sql\Query\SqlGetMessageIdsForPR
        arguments:
            - '@slub.infrastructure.persistence.sql.database_connection'

    slub.infrastructure.persistence.get_average_time_to_merge:
        class: Slub\Infrastructure\Persistence\Sql\Query\SqlGetAverageTimeToMerge
        arguments:
            - '@slub.infrastructure.persistence.sql.database_connection'

    slub.infrastructure.persistence.should_communicate_in_app:
        class: Slub\Infrastructure\Persistence\Sql\Query\ShouldCommunicateInApp
        arguments:
            - '@slub.infrastructure.persistence.sql.database_connection'

    slub.infrastructure.persistence.delivered_event_repository:
        class: Slub\Infrastructure\Persistence\Sql\Repository\SqlDeliveredEventRepository
        arguments:
            - '@slub.infrastructure.persistence.sql.database_connection'

    slub.infrastructure.persistence.has_event_already_been_delivered:
        class: Slub\Infrastructure\Persistence\Sql\Query\SqlHasEventAlreadyBeenDelivered
        arguments:
            - '@slub.infrastructure.persistence.sql.database_connection'

    slub.infrastructure.chat.slack.ok_action:
        class: Slub\Infrastructure\Chat\Slack\OKAction

    slub.infrastructure.chat.slack.tr.process_tr_async:
        class: Slub\Infrastructure\Chat\Slack\TR\ProcessTRAsync
        arguments:
            - '@slub.application.put_pr_to_review.put_pr_to_review_handler'
            - '@slub.infrastructure.vcs.github.query.get_pr_info'
            - '@slub.infrastructure.chat.slack.slack_client'
            - '@router'
            - '@logger'
        tags:
            - { name: kernel.event_listener, event: kernel.terminate }

    slub.infrastructure.chat.slack.tr.process_untr_async:
        class: Slub\Infrastructure\Chat\Slack\UnTR\ProcessUnTRAsync
        arguments:
            - '@slub.application.unpublish_pr.unpublish_pr_handler'
            - '@slub.infrastructure.chat.slack.slack_client'
            - '@router'
            - '@logger'
        tags:
            - { name: kernel.event_listener, event: kernel.terminate }

    slub.infrastructure.chat.slack.oauth_installation_action:
        class: Slub\Infrastructure\Chat\Slack\AppInstallation\OAuthInstallationAction
        arguments:
            - '@slub.infrastructure.http.guzzle_client'
            - '@slub.infrastructure.chat.slack.slack_app_installation_repository'
            - '%env(SLACK_CLIENT_ID)%'
            - '%env(SLACK_CLIENT_SECRET)%'
            - '%env(GITHUB_APP_HOMEPAGE_URL)%'

    slub.infrastructure.query.get_channel_information:
        class: Slub\Infrastructure\Chat\Slack\Query\GetChannelInformation
        arguments:
            - '@slub.infrastructure.http.guzzle_client'
            - '@slub.infrastructure.chat.slack.slack_app_installation_repository'

    slub.infrastructure.query.get_bot_reactions_for_message_and_user:
        class: Slub\Infrastructure\Chat\Slack\Query\GetBotReactionsForMessageAndUser
        arguments:
            - '@slub.infrastructure.http.guzzle_client'
            - '@slub.infrastructure.chat.slack.slack_app_installation_repository'
            - '@logger'

    slub.infrastructure.query.get_bot_user_id:
        class: Slub\Infrastructure\Chat\Slack\Query\GetBotUserId
        arguments:
            - '@slub.infrastructure.http.guzzle_client'
            - '@slub.infrastructure.chat.slack.slack_app_installation_repository'
            - '@logger'

    slub.infrastructure.chat.slack.slack_client:
        class: Slub\Infrastructure\Chat\Slack\SlackClient
        arguments:
            - '@slub.infrastructure.query.get_bot_user_id'
            - '@slub.infrastructure.query.get_bot_reactions_for_message_and_user'
            - '@slub.infrastructure.http.guzzle_client'
            - '@logger'
            - '@slub.infrastructure.chat.slack.slack_app_installation_repository'

    slub.infrastructure.http.guzzle_client:
        class: GuzzleHttp\Client

    # Add missing service definitions
    slub.infrastructure.vcs.github.client.github_api_client:
        class: Slub\Infrastructure\VCS\Github\Client\GithubAPIClient
        arguments:
            - '@slub.infrastructure.vcs.github.client.refresh_access_token'
            - '@slub.infrastructure.vcs.github.client.app_installation_repository'
            - '@slub.infrastructure.http.guzzle_client'

    ## VCS
    slub.infrastructure.vcs.github.client.refresh_access_token:
        class: Slub\Infrastructure\VCS\Github\Client\RefreshAccessToken
        arguments:
            - '@slub.infrastructure.http.guzzle_client'
            - '%env(GITHUB_APP_ID)%'
            - '%env(GITHUB_PRIVATE_KEY)%'
            - '@logger'

    slub.infrastructure.vcs.github.client.app_installation_repository:
        class: Slub\Infrastructure\Persistence\Sql\Repository\SqlAppInstallationRepository
        arguments:
            - '@slub.infrastructure.persistence.sql.database_connection'

    slub.infrastructure.chat.slack.slack_app_installation_repository:
        class: Slub\Infrastructure\Persistence\Sql\Repository\SqlSlackAppInstallationRepository
        arguments:
            - '@slub.infrastructure.persistence.sql.database_connection'

    slub.infrastructure.vcs.github.new_event_action:
        class: Slub\Infrastructure\VCS\Github\EventHandler\NewEventAction
        arguments:
            - '@slub.infrastructure.vcs.github.event_handler_registry'
            - '@slub.infrastructure.persistence.has_event_already_been_delivered'
            - '@slub.infrastructure.persistence.delivered_event_repository'
            - '@logger'
            - '%env(GITHUB_WEBHOOK_SECRET)%'

    slub.infrastructure.vcs.github.event_handler_registry:
        class: Slub\Infrastructure\VCS\Github\EventHandler\EventHandlerRegistry
        arguments:
            - !tagged github.event_handler

    slub.infrastructure.vcs.github.event_handler.new_review:
        class: Slub\Infrastructure\VCS\Github\EventHandler\PullRequestReviewEventHandler
        arguments:
            - '@slub.application.new_review.new_review_handler'
        tags: ['github.event_handler']

    slub.infrastructure.vcs.github.event_handler.check_run:
        class: Slub\Infrastructure\VCS\Github\EventHandler\CheckRunEventHandler
        arguments:
            - '@slub.application.ci_status_update.ci_status_update_handler'
            - '@slub.infrastructure.vcs.github.query.get_pr_info'
        tags: ['github.event_handler']

    slub.infrastructure.vcs.github.event_handler.status_updated:
        class: Slub\Infrastructure\VCS\Github\EventHandler\StatusUpdatedEventHandler
        arguments:
            - '@slub.application.ci_status_update.ci_status_update_handler'
            - '@slub.infrastructure.vcs.github.query.find_pr_number'
            - '@slub.infrastructure.vcs.github.query.get_ci_status'
        tags: ['github.event_handler']

    slub.infrastructure.vcs.github.event_handler.pr_closed:
        class: Slub\Infrastructure\VCS\Github\EventHandler\PRClosedEventHandler
        arguments:
            - '@slub.application.close_pr.close_pr_handler'
        tags: ['github.event_handler']

    slub.infrastructure.vcs.github.event_handler.pr_size_changed:
        class: Slub\Infrastructure\VCS\Github\EventHandler\PRSizeChangedEventHandler
        arguments:
            - '@slub.application.change_pr_size.change_pr_size_handler'
        tags: ['github.event_handler']

    slub.infrastructure.vcs.github.event_handler.new_installation:
        class: Slub\Infrastructure\VCS\Github\EventHandler\NewInstallationEventHandler
        arguments:
            - '@slub.infrastructure.vcs.github.client.app_installation_repository'
            - '@slub.infrastructure.vcs.github.client.refresh_access_token'
        tags: ['github.event_handler']

    slub.infrastructure.vcs.github.event_handler.new_installation_for_all_repositories:
        class: Slub\Infrastructure\VCS\Github\EventHandler\NewInstallationForAllRepositoriesEventHandler
        arguments:
            - '@slub.infrastructure.vcs.github.client.app_installation_repository'
            - '@slub.infrastructure.vcs.github.client.refresh_access_token'
        tags: ['github.event_handler']

    slub.infrastructure.vcs.github.query.get_vcs_status_from_github:
        class: Slub\Infrastructure\VCS\Github\Query\GetVCSStatusFromGithub
        arguments:
            - '@slub.infrastructure.vcs.github.query.get_pr_details'
            - '@slub.infrastructure.vcs.github.query.find_reviews'
            - '@slub.infrastructure.vcs.github.query.get_ci_status'
            - '@logger'

    slub.infrastructure.vcs.github.query.get_pr_details:
        class: Slub\Infrastructure\VCS\Github\Query\GetPRDetails
        arguments:
            - '@slub.infrastructure.vcs.github.client.github_api_client'

    slub.infrastructure.vcs.github.query.find_reviews:
        class: Slub\Infrastructure\VCS\Github\Query\FindReviews
        arguments:
            - '@slub.infrastructure.vcs.github.client.github_api_client'
            - '%GITHUB_URI%'

    slub.infrastructure.vcs.github.query.get_ci_status:
        class: Slub\Infrastructure\VCS\Github\Query\GetCIStatus
        arguments:
            - '@slub.infrastructure.vcs.github.query.ci_status.get_check_run_status'
            - '@slub.infrastructure.vcs.github.query.ci_status.get_status_check_status'
            - '@logger'

    slub.infrastructure.vcs.github.query.ci_status.get_check_run_status:
        class: Slub\Infrastructure\VCS\Github\Query\CIStatus\GetCheckRunStatus
        arguments:
            - '@slub.infrastructure.vcs.github.client.github_api_client'
            - '%env(SUPPORTED_CI_CHECKS)%'
            - '%GITHUB_URI%'
            - '@logger'

    slub.infrastructure.vcs.github.query.ci_status.get_status_check_status:
        class: Slub\Infrastructure\VCS\Github\Query\CIStatus\GetStatusChecksStatus
        arguments:
            - '@slub.infrastructure.vcs.github.client.github_api_client'
            - '%env(SUPPORTED_CI_CHECKS)%'
            - '%GITHUB_URI%'
            - '@logger'

    slub.infrastructure.vcs.github.query.find_pr_number:
        class: Slub\Infrastructure\VCS\Github\Query\FindPRNumber
        arguments:
            - '@slub.infrastructure.vcs.github.client.github_api_client'

    slub.infrastructure.vcs.github.query.get_pr_info:
        class: Slub\Infrastructure\VCS\Github\Query\GetPRInfo
        arguments:
            - '@slub.infrastructure.vcs.github.query.get_pr_details'
            - '@slub.infrastructure.vcs.github.query.find_reviews'
            - '@slub.infrastructure.vcs.github.query.get_ci_status'

    ## UI
    slub.infrastructure.ui.http.list_prs_action:
        class: Slub\Infrastructure\UI\Http\ListPRsAction
        arguments:
            - '@slub.infrastructure.persistence.pr_repository'
            - '@slub.infrastructure.persistence.get_average_time_to_merge'

    ## CLI
    slub.infrastructure.installer.cli.InstallerCLI:
        class: Slub\Infrastructure\Installer\CLI\InstallerCLI
        arguments:
            - '@slub.infrastructure.persistence.sql.database_connection'
        tags:
            - { name: console.command }

    slub.infrastructure.installer.cli.publish_reminders:
        class: Slub\Infrastructure\UI\CLI\PublishRemindersCLI
        arguments:
            - '@slub.application.publish_reminders.publish_reminders_handler'
        tags:
            - { name: console.command }

    slub.infrastructure.installer.cli.purge_delivered_events:
        class: Slub\Infrastructure\UI\CLI\PurgeDeliveredEventsCLI
        arguments:
            - '@slub.infrastructure.persistence.sql.database_connection'
        tags:
            - { name: console.command }

    slub.infrastructure.installer.cli.debug_ci_status:
        class: Slub\Infrastructure\UI\CLI\DebugCIStatusCLI
        arguments:
            - '@slub.infrastructure.vcs.github.query.get_pr_info'
        tags:
            - { name: console.command }
